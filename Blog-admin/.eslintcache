[{"C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\Pages\\Main.js":"2","C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\Pages\\Login.js":"3","C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\Pages\\AdminIndex.js":"4","C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\Pages\\AddArticle.js":"5","C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\Pages\\ArticleList.js":"6","C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\config\\apiUrl.js":"7","E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\index.js":"8","E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\Pages\\Main.js":"9","E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\Pages\\Login.js":"10","E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\Pages\\AdminIndex.js":"11","E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\config\\apiUrl.js":"12","E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\Pages\\AddArticle.js":"13","E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\Pages\\ArticleList.js":"14"},{"size":178,"mtime":1612787411125,"results":"15","hashOfConfig":"16"},{"size":379,"mtime":1612787411119,"results":"17","hashOfConfig":"16"},{"size":2970,"mtime":1612787411119,"results":"18","hashOfConfig":"16"},{"size":3066,"mtime":1612787411117,"results":"19","hashOfConfig":"16"},{"size":9911,"mtime":1612787411117,"results":"20","hashOfConfig":"16"},{"size":3958,"mtime":1612787411118,"results":"21","hashOfConfig":"16"},{"size":615,"mtime":1612787411124,"results":"22","hashOfConfig":"16"},{"size":178,"mtime":1612787411125,"results":"23","hashOfConfig":"24"},{"size":379,"mtime":1612787411119,"results":"25","hashOfConfig":"24"},{"size":2364,"mtime":1613010626779,"results":"26","hashOfConfig":"24"},{"size":2511,"mtime":1613014170579,"results":"27","hashOfConfig":"24"},{"size":615,"mtime":1612787411124,"results":"28","hashOfConfig":"24"},{"size":9082,"mtime":1613033274900,"results":"29","hashOfConfig":"24"},{"size":2825,"mtime":1613034607477,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1rsa3jd",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5lgg3b",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\index.js",[],["63","64"],"C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\Pages\\Main.js",[],"C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\Pages\\Login.js",["65"],"import React,{ useState } from 'react'\r\nimport { Button, Card, Input, Spin, message } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport '../Static/css/Login.css';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiUrl'\r\n\r\nexport default function Login(props) {\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const checkLogin = () => {\r\n        setIsLoading(true)\r\n        //判断用户名,密码是否为空\r\n        if(!userName){\r\n            setTimeout(() => {\r\n                message.error('用户名不能为空')\r\n                setIsLoading(false)\r\n            },500)\r\n            return false\r\n        }else if(!password){           \r\n            setTimeout(() => {\r\n                message.error('密码不能为空') \r\n                setIsLoading(false)\r\n            },500)\r\n            return false\r\n        }\r\n        let dataProps = {\r\n            'userName':userName,\r\n            'password':password\r\n        }\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: servicePath.checkLogin,\r\n            data: dataProps,\r\n            withCredentials: true ,  //前端后端共享session\r\n        }).then(\r\n            res => {\r\n                setIsLoading(false)\r\n                if(res.data.data == '登录成功') {\r\n                    localStorage.setItem('openId', res.data.openId)\r\n                    props.history.push('/index')\r\n                }else {\r\n                    message.error('用户名密码错误')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const IconFont = createFromIconfontCN({\r\n        scriptUrl: [\r\n            '//at.alicdn.com/t/font_2229618_3zvp2rl5aop.js'\r\n        ],\r\n      });\r\n    return (\r\n        <div className=\"login-div\">\r\n            <Spin tip=\"Loading...\" spinning={isLoading}>\r\n                <Card title=\"De Blog\" bordered={true} style={{ width: 400 }}>\r\n                    <Input \r\n                        id={userName}\r\n                        size=\"large\"\r\n                        placeholder=\"Enter your userName\"\r\n                        prefix={<IconFont type=\"icon-user\" style={{ color: 'rgba(0,0,0,.25)'}} />} \r\n                        onChange={ e => setUserName(e.target.value)}\r\n                    />\r\n                    <br/><br/>\r\n                    <Input.Password \r\n                        id={password}\r\n                        size=\"large\"\r\n                        placeholder=\"Enter your password\"\r\n                        prefix={<IconFont type=\"icon-key\" style={{ color: 'rgba(0,0,0,.25)'}} />} \r\n                        onChange={ e => setPassword(e.target.value)}\r\n                    />\r\n                    <Button type=\"primary\" size=\"large\" block onClick={checkLogin}>Login in</Button>\r\n                </Card>\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\Pages\\AdminIndex.js",["66"],"import React,{useState} from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport '../Static/css/AdminIndex.css';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport AddArticle from './AddArticle';\r\nimport { Route } from \"react-router-dom\";\r\nimport ArticleList from './ArticleList'\r\n\r\n\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nfunction AdminIndex(props){\r\n\r\n  const [collapsed,setCollapsed] = useState(false)\r\n\r\n  const onCollapse = collapsed => {\r\n    setCollapsed(collapsed)\r\n  };\r\n\r\n  const IconFont = createFromIconfontCN({\r\n    scriptUrl: [\r\n        '//at.alicdn.com/t/font_2229618_3zvp2rl5aop.js',\r\n        '//at.alicdn.com/t/font_2229618_qojlvufwh3.js'\r\n\r\n    ],\r\n  });\r\n\r\n  const handleClickArticle = e => {\r\n    if(e.key == 'addArticle'){\r\n      props.history.push('/index/add')\r\n    }else {\r\n      props.history.push('/index/list')\r\n    }\r\n  }\r\n\r\n    return (\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider  collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n            <Menu.Item key=\"1\">\r\n              <IconFont type=\"icon-gongzuotai\" />\r\n              <span>工作台</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n              <IconFont type=\"icon-icon-test\" />\r\n              <span>添加文章</span>\r\n            </Menu.Item>\r\n            <SubMenu\r\n              key=\"sub1\"\r\n              onClick={handleClickArticle}\r\n              title={\r\n                <span>\r\n                  <IconFont type=\"icon-user1\" />\r\n                  <span>文章管理</span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Item key=\"addArticle\">添加文章</Menu.Item>\r\n              <Menu.Item key=\"articleList\">文章列表</Menu.Item>\r\n\r\n            </SubMenu>\r\n\r\n            <Menu.Item key=\"9\">\r\n              <IconFont type=\"icon-liuyan\" />\r\n              <span>留言管理</span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Header style={{ background: '#fff', padding: 0 }} />\r\n          <Content style={{ margin: '0 16px' }}>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n              <Breadcrumb.Item>后台管理</Breadcrumb.Item>\r\n              <Breadcrumb.Item>工作台</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\r\n              <div>\r\n                <Route path=\"/index/\" exact component={AddArticle} />\r\n                <Route path=\"/index/add/\" exact component={AddArticle} />\r\n                <Route path=\"/index/add/:id\" exact component={AddArticle} />\r\n                <Route path=\"/index/list/\" exact component={ArticleList} />    \r\n              </div>\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>De.top</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default AdminIndex\r\n","C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\Pages\\AddArticle.js",["67","68","69"],"import React,{ useState ,useEffect} from 'react'\r\nimport marked from 'marked'\r\nimport  '../Static/css/AddArticle.css'\r\nimport { Row, Col, Input, Select, Button, DatePicker, message} from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiUrl'\r\n\r\nconst { Option } = Select\r\nconst { TextArea } = Input\r\n\r\nexport default function AddArticle(props) {\r\n    const [articleId,setArticleId] = useState(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n    const [articleTitle,setArticleTitle] = useState('')   //文章标题\r\n    const [articleContent , setArticleContent] = useState('')  //markdown的编辑内容\r\n    const [markdownContent, setMarkdownContent] = useState('预览内容') //html内容\r\n    const [introducemd,setIntroducemd] = useState()            //简介的markdown内容\r\n    const [introducehtml,setIntroducehtml] = useState('等待编辑') //简介的html内容\r\n    const [showDate,setShowDate] = useState()   //发布日期\r\n    // const [updateDate,setUpdateDate] = useState() //修改日志的日期\r\n    const [typeInfo ,setTypeInfo] = useState([]) // 文章类别信息\r\n    const [selectedType,setSelectType] = useState('选择类型') //选择的文章类别\r\n\r\n    useEffect(() => {\r\n        getTypeInfo()\r\n        // 获取文章id\r\n        let tmpId = props.match.params.id\r\n        if(tmpId){\r\n            setArticleId(tmpId)\r\n            getArticleById(tmpId)\r\n        }\r\n    },[])\r\n\r\n    marked.setOptions({\r\n        renderer: marked.Renderer(),\r\n        gfm: true,\r\n        pedantic: false,\r\n        sanitize: false,\r\n        tables: true,\r\n        breaks: false,\r\n        smartLists: true,\r\n        smartypants: false,\r\n      }); \r\n\r\n      const changeContent = e => {\r\n          setArticleContent(e.target.value)\r\n          let html = marked(e.target.value)\r\n          setMarkdownContent(html)\r\n      }\r\n      const changeIntroduce = e => {\r\n        setIntroducemd(e.target.value)\r\n        let html = marked(e.target.value)\r\n        setIntroducehtml(html)\r\n      }\r\n\r\n       //从中台得到文章类别信息\r\n       const getTypeInfo = () => {\r\n\r\n            axios({\r\n                method: 'get',\r\n                url: servicePath.getTypeInfo,\r\n                header: { 'Access-Control-Allow-Origin':'*' },\r\n                withCredentials: true   //允许跨域检验cookie\r\n            }).then(\r\n                res=>{\r\n                        if(res.data.data == \"没有登录\"){\r\n                            localStorage.removeItem('openId')\r\n                            props.history.push('/')  \r\n                        }else{\r\n                            setTypeInfo(res.data.data)\r\n                        }\r\n                    }\r\n                )\r\n        }\r\n        // 选择文章类别\r\n        const selectTypeHandler= (value) => {\r\n            setSelectType(value)\r\n        }\r\n\r\n        const saveArticle = () => {\r\n            if(!selectedType) {\r\n                message.error('请选择文章类型')\r\n                return false\r\n            }else if(!articleTitle) {\r\n                message.error('请输入文章名')\r\n                return false\r\n            }else if(!articleContent) {\r\n                message.error('请输入文章内容')\r\n                return false\r\n            }else if(!introducemd) {\r\n                message.error('请输入文章简介')\r\n                return false\r\n            }else if(!showDate) {\r\n                message.error('请输入发布日期')\r\n                return false\r\n            }\r\n            console.log(showDate);\r\n            let dataProps={}    //传递到接口的参数\r\n            dataProps.type_id = selectedType\r\n            dataProps.title = articleTitle\r\n            dataProps.article_content = articleContent\r\n            dataProps.introduce = introducemd\r\n            dataProps.addTime = showDate.replace('-', '/')  //把字符串转换成时间戳\r\n\r\n            if(articleId == 0) {\r\n                // console.log('articleId=:'+articleId)\r\n                // dataProps.view_count =Math.ceil(Math.random()*100)+1000\r\n                axios({\r\n                    method:'post',\r\n                    url: servicePath.addArticle,\r\n                    data: dataProps,\r\n                    withCredentials: true\r\n                }).then(\r\n                    res => {\r\n                        setArticleId(res.data.insertId)\r\n                        if(res.data.isSuccess){\r\n                            message.success('文章添加成功')\r\n                        } else {\r\n                            message.error('文章添加失败')\r\n                        }\r\n                    }\r\n                )\r\n            }else {\r\n                dataProps.id = articleId\r\n                axios({\r\n                    method:'post',\r\n                    url:servicePath.updateArticle,\r\n                    header:{ 'Access-Control-Allow-Origin':'*' },\r\n                    data: dataProps,\r\n                    withCredentials: true\r\n                }).then(\r\n                    res => {\r\n                        if(res.data.isSuccess) {\r\n                            message.success('文章修改成功')\r\n                        }else{\r\n                            message.error('文章修改失败')\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n\r\n        const getArticleById = id => {\r\n            axios(servicePath.getArticleById + id,{\r\n                withCredentials: true,\r\n                header: {'Access-Control-Allow-Origin': '*'}\r\n            }).then(\r\n                res => {\r\n                      let articleInfo = res.data.data[0]\r\n                      setArticleTitle(articleInfo.title)\r\n                      setArticleContent(articleInfo.article_content)\r\n                      console.log(articleInfo);\r\n                      let html = marked(articleInfo.article_content)\r\n                      setMarkdownContent(html)\r\n                      setIntroducemd(articleInfo.introduce)\r\n                      let tmpInt = marked(articleInfo.introduce)\r\n                      setIntroducehtml(tmpInt)\r\n                      setShowDate(articleInfo.addTime)\r\n                      setSelectType(articleInfo.typeId)\r\n                }\r\n            )\r\n        }\r\n\r\n    return (\r\n        <div>\r\n            <Row gutter={5}>\r\n                <Col span={18}>\r\n                    <Row gutter={10} >\r\n                        <Col span={20}>\r\n                            <Input\r\n                                size=\"large\" \r\n                                placeholder=\"博客标题\" \r\n                                value={articleTitle}\r\n                                onChange={e => setArticleTitle(e.target.value)} />\r\n                        </Col>\r\n                        <Col span={4}>\r\n                        &nbsp;\r\n                            <Select defaultValue={selectedType} size=\"large\" onChange={selectTypeHandler}>\r\n                                {\r\n                                    typeInfo.map((item, index) => {\r\n                                        return <Option key={index} value={item.Id}>{item.typeName}</Option>\r\n                                    })\r\n                                }\r\n                                \r\n                            </Select>\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row gutter={10} >\r\n                        <Col span={12}>\r\n                            <TextArea \r\n                                className=\"markdown-content\"\r\n                                value={articleContent} \r\n                                rows={35}  \r\n                                placeholder=\"文章内容\"\r\n                                onChange={changeContent}\r\n                                onPressEnter={changeContent}\r\n                                />\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <div className=\"show-html\"\r\n                                dangerouslySetInnerHTML={{__html:markdownContent}}>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>  \r\n                </Col>\r\n                <Col span={6}>\r\n                    <Row>\r\n                        <Col span={24}>\r\n                                <Button  size=\"large\">草稿</Button>&nbsp;\r\n                                <Button type=\"primary\" size=\"large\" onClick={saveArticle} >发布文章</Button>\r\n                                <br/>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <br/>\r\n                            <TextArea\r\n                                value={introducemd}\r\n                                onChange={changeIntroduce}\r\n                                onPressEnter={changeIntroduce}\r\n                                rows={4}\r\n                                placeholder=\"文章简介\"\r\n                            ></TextArea>\r\n                            <br/>\r\n                            <div  className=\"introduce-html\"\r\n                                  dangerouslySetInnerHTML={{__html:introducehtml}}>\r\n                            </div>    \r\n                        </Col>\r\n                        \r\n                        <Col span={12}>\r\n                            <div className=\"date-select\">\r\n                                <DatePicker\r\n                                    onChange={(date, dateString) => setShowDate(dateString)}\r\n                                    placeholder=\"发布日期\"\r\n                                    size=\"default\"  \r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\Pages\\ArticleList.js",[],"C:\\Users\\Administrator\\Desktop\\测试代码\\zxhdiscoblog\\Blog-admin\\src\\config\\apiUrl.js",[],"E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\index.js",[],"E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\Pages\\Main.js",[],"E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\Pages\\Login.js",[],"E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\Pages\\AdminIndex.js",[],"E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\config\\apiUrl.js",[],"E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\Pages\\AddArticle.js",[],"E:\\CodeDemo\\reactBlog\\Blog-admin\\src\\Pages\\ArticleList.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":43,"column":34,"nodeType":"76","messageId":"77","endLine":43,"endColumn":36},{"ruleId":"74","severity":1,"message":"75","line":32,"column":14,"nodeType":"76","messageId":"77","endLine":32,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":31,"column":7,"nodeType":"80","endLine":31,"endColumn":9,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"75","line":65,"column":42,"nodeType":"76","messageId":"77","endLine":65,"endColumn":44},{"ruleId":"74","severity":1,"message":"75","line":104,"column":26,"nodeType":"76","messageId":"77","endLine":104,"endColumn":28},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getTypeInfo' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [getTypeInfo, props.match.params.id]",{"range":"87","text":"88"},[1295,1297],"[getTypeInfo, props.match.params.id]"]